- stylesheet_links << "../javascripts/date-picker/css/datepicker" 

- javascript_includes << infusion_javascripts(:default_no_jquery, :extras=>[:inline_editor_integrations], :debug=>true, :render_html=>false) 
- javascript_includes << "jquery.jeditable.mini" 
- javascript_includes << "date-picker/js/datepicker" 
- javascript_includes << "jquery.form.js"
- javascript_includes << "jquery.hydraMetadata.js"  
- javascript_includes << 'custom'
- javascript_includes << "catalog/edit"
- javascript_includes << "/plugin_assets/fluid-infusion/infusion/components/undo/js/Undo.js" 
- javascript_includes << "jquery.notice.js"
// For Fancybox
- javascript_includes << "fancybox/jquery.fancybox-1.3.1.pack.js"
- stylesheet_links << "../javascripts/fancybox/jquery.fancybox-1.3.1.css"

// For slider controls
- javascript_includes << "select_to_ui_slider/selectToUISlider.jQuery.js"
- stylesheet_links << ["../javascripts/select_to_ui_slider/css/ui.slider.extras.css"]
- stylesheet_links << "slider"

// For progress box
- stylesheet_links << "progressBox"
- javascript_includes << "jquery.hydraProgressBox.js"

- extra_head_content << capture do 
  :javascript
    $(document).ready(function() {
      $(document).catalogEdit();
    });

.document_viewer#cover_container
  .multipleEdit
    #loading{:style=>"display:none;"}
      %img{:src=>"/images/ajax-loader.gif", :width=>"32", :height=>"32", :alt=>"Saving..."} 
    - if flash[:notice]
      .notice
        = flash[:notice]
    
    - course_pid_array = ActiveFedora::Base.pids_from_uris(document["is_part_of_s"])
    - unless course_pid_array.nil? || course_pid_array.empty?
      - course_pid = ActiveFedora::Base.pids_from_uris(document["is_part_of_s"]).first
      = link_to "Return to course", catalog_path(course_pid)
    
    %fieldset Files
    #uploads{"data-pid"=>params[:id]}
         
    %fieldset Describe the Talk
    = render :partial => 'marpa_lectures/edit_description'
      
    %fieldset Set permissions
    %span#permissions
      = render :partial => "permissions/index", :locals => {:document => document, :asset_id=>params[:id]}

    = delete_asset_link(params[:id], "course")

= async_load_tag(asset_file_assets_path(params[:id], :layout=>"false"), 'uploads')
